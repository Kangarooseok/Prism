apiVersion: apps/v1
kind: Deployment
metadata:
  name: prism-backend
  namespace: controller
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate: { maxUnavailable: 0, maxSurge: 1 }
  selector:
    matchLabels:
      app: prism-backend
  template:
    metadata:
      labels:
        app: prism-backend
    spec:
      containers:
        - name: prism-backend
          image: suggiss/prism-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080

          env:
            # 기본 DB_*
            - name: DB_DRIVER_CLASS_NAME
              valueFrom: { configMapKeyRef: { name: db-config, key: DB_DRIVER_CLASS_NAME } }
            - name: DB_URL
              valueFrom: { configMapKeyRef: { name: db-config, key: DB_URL } }
            - name: DB_USERNAME
              valueFrom: { configMapKeyRef: { name: db-config, key: DB_USERNAME } }
            - name: DB_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: DB_PASSWORD } }

            # 읽기 ERROR_DB_*
            - name: ERROR_DB_DRIVER_CLASS_NAME
              valueFrom: { configMapKeyRef: { name: db-config, key: ERROR_DB_DRIVER_CLASS_NAME } }
            - name: ERROR_DB_URL
              valueFrom: { configMapKeyRef: { name: db-config, key: ERROR_DB_URL } }
            - name: ERROR_DB_USERNAME
              valueFrom: { configMapKeyRef: { name: db-config, key: ERROR_DB_USERNAME } }
            - name: ERROR_DB_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: ERROR_DB_PASSWORD } }


          readinessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
